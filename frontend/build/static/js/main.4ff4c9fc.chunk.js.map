{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/Footer.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_CLEAR_ITEMS","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","arguments","length","undefined","products","action","type","loading","payload","pages","page","error","productDetails","product","productDelete","success","productCreate","productUpdate","productReviewCreate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderList","orders","orderPay","orderListMy","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","_jsx","children","Container","Row","Col","className","logout","dispatch","removeItem","getUserDetails","id","async","getState","config","headers","Authorization","concat","token","data","axios","get","response","message","SearchBox","_ref","history","keyword","setKeyword","useState","_jsxs","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","LinkContainer","to","Brand","Toggle","Collapse","Route","render","Nav","Link","NavDropdown","title","Item","onClick","logoutHandler","isAdmin","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","Text","as","rating","numReviews","price","listProducts","pageNumber","listProductDetails","Loader","Spinner","animation","role","width","height","margin","display","Message","Alert","Paginate","Pagination","Array","keys","active","Meta","description","keywords","Helmet","content","HomeScreen","match","params","useEffect","_Fragment","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","loadingProductReview","successProductReview","errorProductReview","alert","Image","alt","fluid","ListGroup","countInStock","i","addToCartHandler","disabled","reviews","review","createdAt","substring","createProductReview","productId","post","Group","Label","controlId","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","ListGroupItem","checkoutHandler","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","fontSize","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserDetails","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","province","setProvince","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","toFixed","itemsPrice","shippingPrice","index","placeOrderHandler","createOrder","OrderScreen","orderId","SDK","setSDK","loadingPay","errorPay","successPay","loadingDeliver","errorDeliver","successDeliver","window","paypal","clientId","script","document","createElement","onload","body","appendChild","addPayPalScript","href","PayPalButton","amount","onSuccess","paymentResult","payOrder","deliverHandler","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","createProductHandler","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","updateProduct","File","custom","file","files","formData","FormData","append","console","log","OrderListScreen","App","Router","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.4ff4c9fc.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { \n  productDetailsReducer, \n  productListReducer, \n  productDeleteReducer, \n  productCreateReducer, \n  productUpdateReducer,\n  productReviewCreateReducer\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport { \n  orderCreateReducer, \n  orderDetailsReducer, \n  orderListReducer, \n  orderPayReducer,\n  orderListMyReducer,\n  orderDeliverReducer\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderList: orderListReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderDeliver: orderDeliverReducer\n})\n\n//Get cart items from local storage\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n? JSON.parse(localStorage.getItem('cartItems'))\n: []\n\n//Get the logged-in user information from local storage\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\n//Get the user's delivery address information from local storage\nconst shippingAddressStorage = localStorage.getItem('shippingAddress')\n? JSON.parse(localStorage.getItem('shippingAddress'))\n: {}\n\n//Initialize state value\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressStorage },\n  userLogin: { userInfo: userInfoFromStorage }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_RESET,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET\n  } from '../constants/productConstants'\n  \n//Get reducers for all products\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\n//Get reducers for single product\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_DETAILS_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\n//Delete reducers for single product\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\n//Create product reducer\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\n//Update product reducer\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\n//Create product reviews reducer\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}","import { \n  CART_ADD_ITEM, \n  CART_REMOVE_ITEM, \n  CART_SAVE_SHIPPING_ADDRESS, \n  CART_SAVE_PAYMENT_METHOD, \n  CART_CLEAR_ITEMS \n} from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {...state, cartItems:state.cartItems.filter((x) => x.product !== action.payload)}\n    case CART_CLEAR_ITEMS:\n      return { ...state, cartItems: [] }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state, shippingAddress: action.payload }\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state, paymentMethod: action.payload }\n    default:\n      return state\n  }\n}","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n  USER_DETAILS_RESET\n} from '../constants/userConstants'\n  \n//User login reducer\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\n//User register reducer\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\n//User details reducer\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { loading: true, ...state }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\n//User update details reducer\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\n//Get user list reducer\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\n//Delete single user reducer\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\n//Update single user information reducer\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}","import {\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_RESET,\n    ORDER_CREATE_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_RESET,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_RESET,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_RESET,\n    ORDER_PAY_SUCCESS\n} from '../constants/orderConstants'\n  \n//Create order reducer\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n      case ORDER_CREATE_REQUEST:\n        return { loading: true }\n      case ORDER_CREATE_SUCCESS:\n        return { loading: false, order: action.payload, success: true }\n      case ORDER_CREATE_FAIL:\n        return { loading: false, error: action.payload }\n      case ORDER_CREATE_RESET:\n        return {}\n      default:\n        return state\n    }\n}\n\n//Get single order reducer\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case ORDER_DETAILS_SUCCESS:\n      return { loading: false, order: action.payload }\n    case ORDER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\n//Get all orders reducer\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return { loading: true }\n    case ORDER_LIST_SUCCESS:\n      return { loading: false, orders: action.payload }\n    case ORDER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\n//Update the payment status reducer of the order after the order is paid\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return { loading: true }\n    case ORDER_PAY_SUCCESS:\n      return { loading: false, success: true }\n    case ORDER_PAY_FAIL:\n      return { loading: false, error: action.payload }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\n//Update the shipping status reducer of the order after the order is paid\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return { loading: true }\n    case ORDER_DELIVER_SUCCESS:\n      return { loading: false, success: true }\n    case ORDER_DELIVER_FAIL:\n      return { loading: false, error: action.payload }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\n//Get the reducer of the logged-in user's order\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return { loading: true }\n    case ORDER_LIST_MY_SUCCESS:\n      return { loading: false, orders: action.payload }\n    case ORDER_LIST_MY_FAIL:\n      return { loading: false, error: action.payload }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>CopyRight &copy; ShopWay</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import axios from 'axios'\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_DETAILS_RESET\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n//User login action\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//User logout action\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_LIST_RESET })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n}\n\n//User register action\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data })\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//User details action\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//User update profile action\nexport const updateUserDetails = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data })\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//User list action\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_LIST_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n    dispatch({ type: USER_LIST_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Delete user action\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DELETE_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Update user information action\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n    dispatch({ type: USER_UPDATE_SUCCESS })\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='search products ...'\n        className='mr-sm-2 ml-sm-5'\n      ></Form.Control>\n      <Button type='submit' variant='outline-success' className='p-2'>\n        Search\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\nimport SearchBox from './SearchBox'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  //logout function\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>ShopWay</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i>Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>User Info</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                </NavDropdown>) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i>Login\n                  </Nav.Link>\n                </LinkContainer>)}\n                {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin Panel' id='adminmenu'>\n                  <LinkContainer to='/admin/userList'>\n                    <NavDropdown.Item>User List</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productList'>\n                    <NavDropdown.Item>Product List</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderList'>\n                    <NavDropdown.Item>Order List</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport propTypes from 'prop-types'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nRating.propTypes = {\n  value: propTypes.number,\n  text: propTypes.string,\n  color: propTypes.string,\n}\nexport default Rating","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 py-3 rounded'>\n      <Link to={`/products/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n      <Card.Body>\n        <Link to={`/products/${product._id}`}>\n          <Card.Title>{product.name}</Card.Title>\n        </Link>\n        <Card.Text as='div'>\n          <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n        </Card.Text>\n        <Card.Text as='h3'>¥{product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import { \n  PRODUCT_LIST_REQUEST, \n  PRODUCT_LIST_SUCCESS, \n  PRODUCT_LIST_FAIL, \n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL\n} from '../constants/productConstants'\nimport axios from 'axios'\n\n//Get actions for all products\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Get actions for single product\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Delete product action\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_DELETE_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n    dispatch({ type: PRODUCT_DELETE_SUCCESS })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Create product action\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Update product action\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Create product reviews action\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(\n      `/api/products/${productId}/reviews`,\n      review,\n      config\n    )\n    dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner \n    animation='border' \n    role='status' \n    style={{width: '100px', \n    height:'100px', \n    margin: 'auto', \n    display: 'block'}}>\n        <span className='sr-only'> Loading ... </span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productList/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keywords' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Welcome to ShopWay',\n  description: 'Shop Smart, Live Better with ShopWay.',\n  keywords: 'Top brands, low prices. Shop now and save!'\n}\n\nexport default Meta","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport { listProducts } from '../actions/productActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport Meta from '../components/Meta'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n  const pageNumber = match.params.pageNumber || 1\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products, pages, page } = productList\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n  return (\n    <>\n      <Meta />\n      <h1>New Product</h1>\n      {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : \n      (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  ListGroupItem,\n  Form\n} from 'react-bootstrap'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET, PRODUCT_DETAILS_RESET } from '../constants/productConstants'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Rating from '../components/Rating'\nimport Meta from '../components/Meta'\n\nconst ProductScreen = ({history, match}) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    loading: loadingProductReview,\n    success: successProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert('Comment submitted successfully!')\n      setRating(0)\n      setComment('')\n    }\n    if (\n      !product._id ||\n      product._id !== match.params.id ||\n      successProductReview\n    ) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n      dispatch({ type: PRODUCT_DETAILS_RESET })\n    }\n    // eslint-disable-next-line \n  }, [dispatch, match, successProductReview])\n\n  //Add to cart function\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  //Submit comment function\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(createProductReview(match.params.id, { rating, comment }))\n  }\n\n  return (\n    <>\n      <Link className='btn btn-dark my-3' to='/'>\n        Return to Home\n      </Link>\n      {loading ?\n        <Loader />\n        : error ? \n        <Message variant='danger'>{error}</Message>\n        : (\n          <>\n          <Meta title={product.name} />      \n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  Price: ${product.price}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n              <Col md={3}>\n                <Card>\n                  <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Price: </Col>\n                        <Col><strong>${product.price}</strong></Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>In Stock: </Col>\n                        <Col><strong>{product.countInStock}</strong></Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Quantity</Col>\n                        <Col>\n                          <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\n                            {[...Array(product.countInStock).keys()].map(i => (<option key={i + 1} value={i + 1}> { i + 1 } </option>))}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock === 0}>Add To Cart</Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Comments</h2>\n              {product.reviews && product.reviews.length === 0 && (\n                <Message>No Comments</Message>\n              )}\n              <ListGroup variant='flush'>\n                {product.reviews &&\n                  product.reviews.map((review) => (\n                    <ListGroup.Item key={review._id}>\n                      <strong>{review.name}</strong>\n                      <Rating value={review.rating} />\n                      <p>{review.createdAt.substring(0, 10)}</p>\n                      <p>{review.comment}</p>\n                    </ListGroup.Item>\n                  ))}\n                <ListGroup.Item>\n                  <h2>Create Comments</h2>\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group>\n                        <Form.Label>Rating：</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select rating...</option>\n                          <option value='1'>1 - Very dissatisfied</option>\n                          <option value='2'>2 - Dissatisfied</option>\n                          <option value='3'>3 - Neutral</option>\n                          <option value='4'>4 - Satisfied</option>\n                          <option value='5'>5 - Very Satisfied</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type='submit' variant='primary'>\n                        Submit Comment\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please<Link to='/login'> log in </Link>before adding a comment.\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n          </>\n        )}\n    </>\n  )\n}\n\nexport default ProductScreen","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\nimport axios from 'axios'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  //Add purchased items to local storage\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n//Delete product's action\nexport const removeFromCart = (id) => async(dispatch, getState) => {\n  dispatch({type: CART_REMOVE_ITEM, payload: id})\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n//Save shipping address action\nexport const saveShippingAddress = (data) => async (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\n//Save payment method action\nexport const savePaymentMethod = (data) => async (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport Message from '../components/Message'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card, ListGroupItem } from 'react-bootstrap'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n    const cart = useSelector((state) => state.cart)\n    const { cartItems } = cart\n  \n    useEffect(() => {\n      if (productId) {\n        dispatch(addToCart(productId, qty))\n      }\n    }, [dispatch, productId, qty])\n    //Removing items function\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n    //payoff function\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return <Row>\n        <Col md={8}>\n            <h1>Cart</h1>\n            {cartItems.length === 0 \n            ? (<Message>Empty Cart</Message>)\n            : (\n                <ListGroup variant='flush'>\n                    {cartItems.map(item => (\n                        <ListGroup.Item key={item.product}>\n                            <Row>\n                                <Col md={2}>\n                                    <Image src={item.image} alt={item.name} fluid rounded></Image>\n                                </Col>\n                                <Col md={3}>\n                                    <Link to={`/products/${item.product}`}>\n                                        {item.name}\n                                    </Link>\n                                </Col>\n                                <Col md={2}>\n                                    {item.price}\n                                </Col>\n                                <Col md={2}>\n                                    <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\n                                        {[...Array(item.countInStock).keys()].map(i => (<option key={i + 1} value={i + 1}> { i + 1 } </option>))}\n                                    </Form.Control>\n                                </Col>\n                                <Col>\n                                    <Button type='button' onClick={() => removeFromCartHandler(item.product)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            )}\n        </Col>\n        <Col md={4}>\n            <Card>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <h2> ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) products </h2>\n                        <h2> ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0)} </h2>\n                        <ListGroupItem>\n                            <Button type=\"button\" className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\n                                Pay Now\n                            </Button>\n                        </ListGroupItem>\n                    </ListGroup.Item>\n                </ListGroup>  \n            </Card>\n        </Col>\n    </Row>\n  }\n\n  export default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\n//Form container component\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { login } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n  //Form submission function\n  const submitHandler = (e) => {\n    e.preventDefault()\n    //dispatch login function\n    dispatch(login(email, password))\n  }\n  return (\n    <FormContainer>\n      <h1 style={{ fontSize: '48px'}}>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address：</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='please enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='password'>\n          <Form.Label>Password：</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='please enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          Login\n        </Button>\n      </Form>\n      <Row className='py-3'>\n        <Col>\n          New user？\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Sign up\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { register } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n  //Form submission function\n  const submitHandler = (e) => {\n    e.preventDefault()\n    //dispatch register function\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n  return (\n    <FormContainer>\n      <h1 style={{ fontSize: '48px'}}>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name：</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='please enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address：</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='please enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='password'>\n          <Form.Label>Password：</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='please enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password：</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='please confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n      <Row className='py-3'>\n        <Col>\n            Already have an account？\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Sign in\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserDetails } from '../actions/userActions'\nimport { listMyOrder } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user.name || success) {\n        dispatch({type: USER_UPDATE_PROFILE_RESET})\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrder())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n  //Form submission function (update user information)\n  const submitHandler = (e) => {\n    e.preventDefault()\n    //dispatch update profile function\n    dispatch(updateUserDetails({ id: user._id, name, email, password }))\n  }\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>Personal Information</h2>\n        {success && <Message variant='success'>Update Successfully!</Message>}\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name：</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='please enter name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address：</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='please enter email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password：</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='please enter password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label>Confirm Password：</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='please confirm password'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button type='submit' variant='primary'>\n            Change\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Order</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Order Date</th>\n                <th>Total Price</th>\n                <th>Payment Status</th>\n                <th>Shipping Status</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button variant='light' className='btn-sm'>\n                        Order Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen","import {\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS\n} from '../constants/orderConstants'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport axios from 'axios'\nimport { logout } from '../actions/userActions'\n\n//Create order action\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_CREATE_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\n    dispatch({ type: CART_CLEAR_ITEMS })\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Get order action\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Get all orders action\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Complete order payment and update the payment status of the order Action\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({ type: ORDER_PAY_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Unauthorized, no token') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\n//Complete order payment and update the shipping status of the order Action\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DELIVER_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Unauthorized, no token') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\n//Get the action of the logged-in user's order\nexport const listMyOrder = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_MY_REQUEST })\n\n    //Get user information after successful login\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myOrders`, config)\n    dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Login</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Login</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeOrder'>\n            <Nav.Link>Confirm Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Confirm Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nconst ShippingScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [province, setProvince] = useState(shippingAddress.province)\n\n  //Delivery address submission function\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, province }))\n    history.push('/payment')\n  }\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h2 style={{ fontSize: '48px'}}>Shipping Address</h2>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address：</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='please enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='city'>\n          <Form.Label>City：</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='please enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='province'>\n          <Form.Label>Province：</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='please enter province'\n            value={province}\n            required\n            onChange={(e) => setProvince(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code：</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='please enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n            Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { savePaymentMethod } from '../actions/cartActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress) {\n    history.push('/shipping')\n  }\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n  const dispatch = useDispatch()\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeOrder')\n  }\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h2 style={{ fontSize: '48px'}}>Payment Methods</h2>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select a Payment Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, ListGroup, Row, Col, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ( { history } ) => {\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart)\n\n  //Calculating price\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n  \n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 5000 ? 0 : 20)\n\n  cart.totalPrice = addDecimals(\n    Number(cart.itemsPrice) + Number(cart.shippingPrice)\n  )\n  \n  const orderCreate = useSelector((state) => state.orderCreate)\n\n  const { order, success, error } = orderCreate\n  useEffect(() => {\n    if(success) {\n      history.push(`/order/${order._id}`)\n      dispatch({ type: ORDER_CREATE_RESET })\n      dispatch({\n        type: USER_DETAILS_RESET,\n      })\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  //Submit order function\n  const placeOrderHandler = () => {\n    dispatch(createOrder({orderItems: cart.cartItems,\n                          shippingAddress: cart.shippingAddress,\n                          paymentMethod: cart.paymentMethod,\n                          itemsPrice: cart.itemsPrice,\n                          shippingPrice: cart.shippingPrice,\n                          totalPrice: cart.totalPrice}))\n  }\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping Address</h2>\n              <p>\n                <strong>Recipient Address: </strong>\n                {cart.shippingAddress.province},{cart.shippingAddress.city},\n                {cart.shippingAddress.address},{cart.shippingAddress.postalCode}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Way of Payment：</strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Product Order</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Empty Cart</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/products/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} X {item.price} = {item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Details</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Product Price</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping Fee</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Price</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  onClick={placeOrderHandler}\n                  disabled={cart.cartItems === 0}\n                >\n                  Submit Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, ListGroup, Row, Col, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n  const dispatch = useDispatch()\n\n  const [SDK, setSDK] = useState(false)\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, error: errorPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, error: errorDeliver, success: successDeliver } = orderDeliver\n\n  //Calculate the price\n  if (!loading) {\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://sandbox.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n\n      script.onload = () => {\n        setSDK(true)\n      }\n      document.body.appendChild(script)\n    }\n    if (!userInfo) {\n      history.push('/login')\n    }\n    if (!order || order._id !== orderId || successPay || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSDK(true)\n      }\n    }\n  }, [dispatch, history, userInfo, order, orderId, successPay, successDeliver])\n\n  //Create a function for PayPal payment btn\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult))\n  }\n  //Create a function for clicking on the shipping btn\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1 style={{ fontSize: '36px'}}>Order Number：{order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping Address</h2>\n              <p>\n                <strong>Recipient Address：</strong>\n              </p>\n              <p>\n                {order.shippingAddress.province}, \n                {order.shippingAddress.city}, \n                {order.shippingAddress.address}, \n                {order.shippingAddress.postalCode}\n              </p>\n              <p>\n                <strong>Name: </strong>\n                {order.user.name}\n              </p>\n              <p>\n                {' '}\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivery Time：{order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Shipped</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Way of Payment: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Payment Time：{order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Unpaid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Product Order</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Empty Cart</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/products/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} X {item.price} = {item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Details</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Product Price</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping Fee</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Price</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {order.paymentMethod === 'PayPal' && !SDK ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    ></PayPalButton>\n                  )}\n                </ListGroup.Item>\n              )}\n              {/* shipping btn */}\n              {userInfo &&\n              userInfo.isAdmin &&\n              order.isPaid &&\n              !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                    type='button'\n                    className='btn-block'\n                    onClick={deliverHandler}\n                  >\n                    Shipping Order\n                  </Button>\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({history}) => {\n  const dispatch = useDispatch()\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if(userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo, successDelete])\n\n  //Delete user function\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteUser(id))\n    }\n  }\n  return (\n    <>\n      <h1>User List</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Administrator</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n\n  const [isAdmin, setIsAdmin] = useState(true)\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\n\n  useEffect(() => {\n    if(successUpdate) {\n      dispatch({type: USER_UPDATE_RESET})\n      history.push('/admin/userList')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n  //Form submission function\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({_id:userId, name, email, isAdmin}))\n  }\n  return (\n    <FormContainer>\n      <Link to='/admin/userlist' className='btn btn-dark my-3'>\n        Return to previous page\n      </Link>\n      <h1>Editing User Interface</h1>\n      {loadingUpdate && <Loader />}\n      {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name：</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Please enter name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='email'>\n            <Form.Label>Email：</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Please enter email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='isadmin'>\n            <Form.Check\n              type='checkbox'\n              label='Is Admin'\n              checked={isAdmin}\n              onChange={(e) => setIsAdmin(e.target.checked)}\n            ></Form.Check>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Update Information\n          </Button>\n        </Form>\n      )}\n    </FormContainer>\n  )\n}\n\nexport default UserEditScreen","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\nimport Paginate from '../components/Paginate'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n  const dispatch = useDispatch()\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, pages, page } = productList\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n  const productDelete = useSelector((state) => state.productDelete)\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n  const productCreate = useSelector((state) => state.productCreate)\n  const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n    if (!userInfo.isAdmin) {\n      history.push('/login')\n    }\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber\n  ])\n\n  //Delete product function\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n  //Create product function\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n  return (\n    <>\n      <Row>\n        <Col>\n          {' '}\n          <h1>Product List</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingCreate && <Loader />}\n      {errorCreate && (\n        <Message variant='danger'>{error}</Message>\n      )}\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{error}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Product Name</th>\n              <th>Price</th>\n              <th>Type</th>\n              <th>Brand</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>{product.price}</td>\n                <td>{product.category}</td>\n                <td>{product.brand}</td>\n                <td>\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(product._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport FormContainer from '../components/FormContainer'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productList')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n  //Form submission function\n  const submitHandler = (e) => {\n    e.preventDefault()\n    //dispatch update product function\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        description,\n      })\n    )\n  }\n  //Handle file uploads\n  const uploadFileHandler = async (e) => {\n    //Get the file selected by the user to upload\n    const file = e.target.files[0]\n    //Instantiate the formdata form data object\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multerpart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.log(error)\n      setUploading(false)\n    }\n  }\n  return (\n    <FormContainer>\n      <Link to='/admin/productList' className='btn btn-dark my-3'>\n        Return to previous page\n      </Link>\n      <h1>Edit product interface</h1>\n      {loadingUpdate && <Loader />}\n      {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name：</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Please enter product name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='price'>\n            <Form.Label>Price：</Form.Label>\n            <Form.Control\n              type='number'\n              placeholder='Please enter product price'\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='image'>\n            <Form.Label>Image：</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Please enter image path'\n              value={image}\n              onChange={(e) => setImage(e.target.value)}\n            ></Form.Control>\n            <Form.File\n              id='image-file'\n              label='Select upload image'\n              custom\n              onChange={uploadFileHandler}\n            ></Form.File>\n            {uploading && <Loader />}\n          </Form.Group>\n          <Form.Group controlId='brand'>\n            <Form.Label>Brand：</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Please enter product brand'\n              value={brand}\n              onChange={(e) => setBrand(e.target.value)}\n            ></Form.Control>\n          </Form.Group>{' '}\n          <Form.Group controlId='countInStock'>\n            <Form.Label>Inventory：</Form.Label>\n            <Form.Control\n              type='number'\n              placeholder='Please enter product inventory'\n              value={countInStock}\n              onChange={(e) => setCountInStock(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='category'>\n            <Form.Label>Category：</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Please enter product category'\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='description'>\n            <Form.Label>Description：</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Please enter product description'\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button type='submit' variant='primary'>\n            Update Information\n          </Button>\n        </Form>\n      )}\n    </FormContainer>\n  )\n}\n\nexport default ProductEditScreen","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Order List</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>User</th>\n              <th>Order Date</th>\n              <th>Total Price</th>\n              <th>Payment Status</th>\n              <th>Shipping Status</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      View Order\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/placeOrder' component={PlaceOrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/products/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userList' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productList'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productList/:pageNumber'\n            component={ProductListScreen}\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderList' component={OrderListScreen} />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()"],"sourceRoot":""}